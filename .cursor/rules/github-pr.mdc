---
description: GitHub Pull Request作成のための手順とガイドライン
globs: 
alwaysApply: false
---
# GitHub PRワークフロータスク

このタスクはGitHub CLIを使用して、効率的なプルリクエストワークフローを実現します。ブランチの作成からPRの作成、レビュー、マージまでをサポートします。

## 手順

1. 最新のメインブランチからプルして同期する
2. 作業ブランチを作成または切り替え
3. 変更を実施してコミット
4. プルリクエストを作成
5. 必要に応じてレビューリクエストや関連イシューの設定

## 実行

### リポジトリの同期

まず、ベースブランチの最新状態を取得します:

```bash
git checkout {{ BASE_BRANCH || 'main' }}
git pull origin {{ BASE_BRANCH || 'main' }}
```

### 作業ブランチの準備

新しいブランチを作成するか、既存ブランチに切り替えます:

```bash
# ブランチが存在するか確認
git show-ref --verify --quiet refs/heads/{{ BRANCH_NAME }} || git checkout -b {{ BRANCH_NAME }}
git checkout {{ BRANCH_NAME }}
```

### プルリクエストの作成

変更を実装した後、それらをコミットし、プルリクエストを作成します:

```bash
# 変更をステージングしてコミット
git add .
git commit -m "{{ TITLE }}"

# リモートにプッシュ
git push -u origin {{ BRANCH_NAME }}

# プルリクエスト作成
gh pr create --title "{{ TITLE }}" --body "{{ DESCRIPTION }}" --base {{ BASE_BRANCH || 'main' }}
```

### プルリクエストのカスタマイズ

プルリクエストに追加のオプションを設定できます:

```bash
# レビュアーの追加（必要に応じて）
gh pr edit --reviewer username1,username2

# ラベルの追加（必要に応じて）
gh pr edit --add-label "enhancement,bug-fix"

# マイルストーンの設定（必要に応じて）
gh pr edit --milestone "Next Release"
```

### プルリクエストの確認

ブラウザでプルリクエストを確認します:

```bash
gh pr view --web
```

### チェック状態の確認

CIチェックやレビュー状態を確認します:

```bash
gh pr checks
gh pr status
```

### マージ（承認後）

レビューで承認されたら、PRをマージできます:

```bash
gh pr merge
```

## 追加の便利なコマンド

### プルリクエストを通じてイシューをクローズ

```bash
gh pr create --title "{{ TITLE }}" --body "Closes #123" --base {{ BASE_BRANCH || 'main' }}
```

### ドラフトPRとして作成

```bash
gh pr create --draft --title "{{ TITLE }}" --body "{{ DESCRIPTION }}"
```

### PRの差分を確認

```bash
gh pr diff
```

## 完了

プルリクエストが正常に作成されました。次のステップ:

1. CIチェックの結果を確認する
2. レビュアーからのフィードバックに対応する
3. 必要に応じて追加の変更をプッシュする
4. 承認後にPRをマージする